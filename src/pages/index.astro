---
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Inventory Uploader</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      body {
        font-family: 'Segoe UI', sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100dvh;
        background-color: #f9fafb;
        margin: 0;
      }

      .card {
        background: white;
        border-radius: 1.5rem;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        width: 100%;
        max-width: 500px;
        text-align: center;
      }

      h1 {
        font-size: 1.8rem;
        margin-bottom: 1rem;
        color: #111827;
      }

      input[type="text"] {
        padding: 0.6rem 1rem;
        width: 100%;
        margin-bottom: 1rem;
        font-size: 1rem;
        border: 1px solid #d1d5db;
        border-radius: 0.75rem;
      }

      .drop-area {
        border: 2px dashed #9ca3af;
        padding: 2rem;
        border-radius: 1rem;
        background-color: #f3f4f6;
        cursor: pointer;
        margin-bottom: 1rem;
        color: #6b7280;
      }

      .drop-area.dragover {
        background-color: #e0f2fe;
        border-color: #38bdf8;
        color: #0369a1;
      }

      button {
        background-color: #2563eb;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.75rem;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.2s ease;
      }

      button:hover {
        background-color: #1d4ed8;
      }

      .progress {
        height: 8px;
        background-color: #e5e7eb;
        border-radius: 999px;
        margin-top: 1rem;
        overflow: hidden;
      }

      .progress-bar {
        height: 100%;
        width: 0%;
        background-color: #3b82f6;
        transition: width 0.3s ease;
      }

      #status {
        margin-top: 1rem;
        color: #10b981;
        font-size: 0.95rem;
      }
    </style>
  </head>
  <body>
    <div class="card">
      <h1>Upload Room Photos + Audio</h1>
      <form id="uploadForm">
        <input
          type="text"
          id="roomType"
          name="room_type"
          placeholder="Enter room name (e.g. Bathroom)"
          required
        />
        <div id="dropArea" class="drop-area">
          Drag & Drop Folder Here or Click to Select
        </div>
        <input
          type="file"
          id="fileInput"
          multiple
          hidden
        />
        <button type="submit">Upload</button>
        <div class="progress">
          <div class="progress-bar" id="progressBar"></div>
        </div>
        <div id="status"></div>
      </form>
    </div>

    <script type="module">
      const dropArea = document.getElementById("dropArea");
      const fileInput = document.getElementById("fileInput");
      const form = document.getElementById("uploadForm");
      const progressBar = document.getElementById("progressBar");
      const status = document.getElementById("status");
	  input.setAttribute("webkitdirectory", "");
	  input.setAttribute("directory", "");

      // Open file picker on click
      dropArea.addEventListener("click", () => fileInput.click());

      // Drag over styling
      dropArea.addEventListener("dragover", (e) => {
        e.preventDefault();
        dropArea.classList.add("dragover");
      });

      dropArea.addEventListener("dragleave", () => {
        dropArea.classList.remove("dragover");
      });

      dropArea.addEventListener("drop", (e) => {
        e.preventDefault();
        dropArea.classList.remove("dragover");
        fileInput.files = e.dataTransfer.files;
      });

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const files = fileInput.files;
        const roomType = document.getElementById("roomType").value;

        if (!roomType || files.length === 0) {
          alert("Please enter a room type and select files.");
          return;
        }

        const formData = new FormData();
        formData.append("room_type", roomType);

        for (const file of files) {
          if (file.type.startsWith("image/")) {
            formData.append("image[]", file);
          } else if (file.type.startsWith("audio/")) {
            formData.append("audio", file);
          }
        }

        status.textContent = "üì§ Uploading...";
        progressBar.style.width = "0%";

        try {
          const xhr = new XMLHttpRequest();
          xhr.open("POST", "https://sixthsensen8n.app.n8n.cloud/webhook-test/upload-room");

          xhr.upload.addEventListener("progress", (e) => {
            if (e.lengthComputable) {
              const percent = (e.loaded / e.total) * 100;
              progressBar.style.width = percent.toFixed(1) + "%";
            }
          });

          xhr.onload = () => {
            if (xhr.status >= 200 && xhr.status < 300) {
              const result = JSON.parse(xhr.responseText);
              status.innerHTML = `‚úÖ Report ready: <a href="${result.reportUrl}" target="_blank">Download</a>`;
            } else {
              status.textContent = "‚ùå Upload failed. See console.";
              console.error(xhr.responseText);
            }
          };

          xhr.onerror = () => {
            status.textContent = "‚ùå Network error. Try again.";
          };

          xhr.send(formData);
        } catch (err) {
          console.error(err);
          status.textContent = "‚ùå Error uploading. See console.";
        }
      });
    </script>
  </body>
</html>
