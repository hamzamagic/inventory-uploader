---
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Inventory Report Uploader</title>
    <style>
      body {
        font-family: sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        background-color: #f7f7f8;
        color: #333;
      }
      h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
      }
      form {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 600px;
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
      input[type="text"], textarea {
        width: 100%;
        padding: 0.75rem;
        border-radius: 8px;
        border: 1px solid #ccc;
      }
      .upload-section {
        border: 2px dashed #ccc;
        padding: 1rem;
        border-radius: 8px;
        text-align: center;
        background-color: #fafafa;
      }
      button {
        padding: 0.75rem;
        background: #4f46e5;
        color: white;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: bold;
      }
      button:hover {
        background: #4338ca;
      }
    </style>
  </head>
  <body>
    <h1>Inventory Uploader</h1>
    <form id="upload-form">
      <label for="roomType">Room Type:</label>
      <input type="text" name="room_type" id="roomType" placeholder="e.g., Kitchen, Living Room..." required />

      <div>
        <label>Upload Images and Audio</label>
        <div class="upload-section" id="drop-zone">
          Drag & Drop Files Here or Click to Select
          <input type="file" id="file-input" name="files[]" accept="image/*,audio/*" multiple style="display: none;" />
        </div>
      </div>

      <label for="transcription">Transcription Preview:</label>
      <textarea id="transcription" name="transcription" rows="5" placeholder="Transcription will appear here..." required></textarea>

      <button type="submit">Upload</button>
      <div id="status"></div>
    </form>

    <script>
      const fileInput = document.getElementById('file-input');
      const dropZone = document.getElementById('drop-zone');
      const form = document.getElementById('upload-form');
      const transcriptionBox = document.getElementById('transcription');
      const status = document.getElementById('status');

      dropZone.addEventListener('click', () => fileInput.click());
      dropZone.addEventListener('dragover', e => {
        e.preventDefault();
        dropZone.style.background = '#e0e7ff';
      });
      dropZone.addEventListener('dragleave', () => {
        dropZone.style.background = '#fafafa';
      });
      dropZone.addEventListener('drop', e => {
        e.preventDefault();
        dropZone.style.background = '#fafafa';
        fileInput.files = e.dataTransfer.files;
        processAudioForTranscription();
      });

      fileInput.addEventListener('change', () => {
        processAudioForTranscription();
      });

      async function processAudioForTranscription() {
        const files = Array.from(fileInput.files);
        const audioFile = files.find(f => f.type.startsWith('audio/'));
        if (!audioFile) return;

        const formData = new FormData();
        formData.append('file', audioFile);
        formData.append('model', 'whisper-1');

        transcriptionBox.value = 'Transcribing...';

        try {
          const response = await fetch('/api/transcribe', {
            method: 'POST',
            body: formData
          });
          const data = await response.json();
          transcriptionBox.value = data.text;
        } catch (err) {
          transcriptionBox.value = 'Error transcribing audio.';
          console.error(err);
        }
      }

      form.addEventListener('submit', async e => {
        e.preventDefault();
        status.innerHTML = 'Uploading...';

        const formData = new FormData();
        const roomType = document.getElementById('roomType').value;
        formData.append('room_type', roomType);
        formData.append('transcription', transcriptionBox.value);

        for (let file of fileInput.files) {
          if (file.type.startsWith('image/')) {
            formData.append('image[]', file);
          } else if (file.type.startsWith('audio/')) {
            formData.append('audio', file);
          }
        }

        try {
          const res = await fetch('https://sixthsensen8n.app.n8n.cloud/webhook-test/upload-room', {
            method: 'POST',
            body: formData
          });

          const result = await res.text();
          status.innerHTML = `✅ Report ready: ${result}`;
        } catch (err) {
          status.innerHTML = '❌ Error uploading files.';
          console.error(err);
        }
      });
    </script>
  </body>
</html>
